name: Deploy to Nuget

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push
  #branches: [master]

  #paths:
  #  - "MessagingModels"

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

env:
  PROJECT_PATH: MessagingModels/MessagingModels.csproj
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: "https://api.nuget.org/v3/index.json"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    name: Deploy

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore packages
        run: |
          dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project
        run: |
          dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

      - name: Pack project
        run: |
          dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Push package
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}
