name: Docker Build and Push

on:
  push:
    branches:
      - master
    # build and push the images only if one of the microservices changed
    #paths:
    #  - "Auth"
    #  - "Client"
    #  - "Services"
    #  - "Users"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        uses: docker/login-action@v2.0.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          # registry: ${{ secrets.DH_URL }}
          # Username used to log against the Docker registry
          username: ${{ secrets.DH_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DH_PASSWORD }}
          # Log out from the Docker registry at the end of a job
          logout: true

      - name: Docker build and push
        run: |
          docker build -t ${{ secrets.DH_USERNAME }}/handiwork-users:latest -t ${{ secrets.DH_USERNAME }}/handiwork-users:${{ github.sha }} -f Users/Dockerfile ./Users
          docker push ${{ secrets.DH_USERNAME }}/handiwork-users:${{ github.sha }}
          docker push ${{ secrets.DH_USERNAME }}/handiwork-users:latest

          docker build -t ${{ secrets.DH_USERNAME }}/handiwork-services:latest -t ${{ secrets.DH_USERNAME }}/handiwork-services:${{ github.sha }} -f Services/Dockerfile ./Services
          docker push ${{ secrets.DH_USERNAME }}/handiwork-services:${{ github.sha }}
          docker push ${{ secrets.DH_USERNAME }}/handiwork-services:latest

          docker build -t ${{ secrets.DH_USERNAME }}/handiwork-auth:latest -t ${{ secrets.DH_USERNAME }}/handiwork-auth:${{ github.sha }} -f Auth/Dockerfile ./Auth
          docker push ${{ secrets.DH_USERNAME }}/handiwork-auth:${{ github.sha }}
          docker push ${{ secrets.DH_USERNAME }}/handiwork-auth:latest

          docker build -t ${{ secrets.DH_USERNAME }}/handiwork-client:latest -t ${{ secrets.DH_USERNAME }}/handiwork-client:${{ github.sha }} -f Client/Dockerfile ./Client
          docker push ${{ secrets.DH_USERNAME }}/handiwork-client:${{ github.sha }}
          docker push ${{ secrets.DH_USERNAME }}/handiwork-client:latest  

      - name: Update yaml files in place
        # You may pin to the exact commit or the version.
        # uses: loveholidays/gitops-action-yaml-updater@c603741f5ab74071e3e73e2acfad4d66e529089c
        uses: loveholidays/gitops-action-yaml-updater@v1.0.0
        with:
          # TYPE of the new value to be updated
          mode: IMAGE_TAG
          # Name of the container
          container-name: auth
          # Path to the yaml file
          filepath: K8S/auth-depl.yaml 
          # Tag value for the new image
          new-image-tag: ${{ github.sha }} 
              
#       - name: Update k8s image
#         # You may pin to the exact commit or the version.
#         # uses: Charlyzzz/update-k8s-image@1ed6b41d9b6db7d20e8fea8d9b0be57cc6cb9d5c
#         uses: Charlyzzz/update-k8s-image@v1.7.1
#         with:
#           # Location of the manifest that will be updated
#           manifest-path: K8S/auth-depl.yaml
#           # New image tag
#           new-image-tag: ${{github.sha}}
#           # Name of the container that references the image to replace
#           container-name: ${{ secrets.DH_USERNAME }}/handiwork-auth

#       - name: Kubernetes
#         # You may pin to the exact commit or the version.
#         # uses: steebchen/kubectl@bd911c0b014904226d4cbd571ec0f7b679c5bb7c
#         uses: steebchen/kubectl@v2.0.0
#         with:
#           # kubectl version, e.g. `v1.21.0`, defaults to latest
#           version: v1.21.0
#           # kube config data
#           config: ${{ secrets.KUBE_CONFIG }}
#           # kubectl command to run, without the kubectl, e.g. `get pods`
#           command: apply -f K8S/*

#       - name: Deploy to cluster
#         uses: myrotvorets/kubectl-action@2.0.0
#         with:
#           config: ${{ secrets.KUBE_CONFIG }}
#           version: latest
#           args: apply -f K8S
